<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Linux-文件权限管理]]></title>
    <url>%2F2018%2F04%2F09%2FLinux%2F2018-04-09-Linux%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[文件管理权限 - rwx r-x r-x user1 user1 filename类型 拥有者权限 所属组权限 其他人权限 拥有者 属组 对象 文件权限内容解读 [-] [rwx][r-x][r-- ] 1 234 567 8901 为：代表这个文件名目录或 文件 ， (-)为文件；(d)为目录；234为：拥有者的权限，(r)可读、(w)可写、(x)可执行 文件 (r)可读、(w)创建、(x)进入 目录567为：同群组用户权利890为：其他用户权利 对于目录: r读（看到目录里面有什么） ls w建文件、删除、移动 touch mkdir rm mv cp x进入 cd 特殊权限 SUID SGID stickybitS对应值： 4s 2t 1 SUID限定：只能设置在二进制可行性程序上面，对目录文本设置无效。功能：程序运行的权限从执行者变更成程序的所有者。 [root@izuf6fmbh00axmyjllc0x0z ~]# ll /usr/bin/passwd-rwsr-xr-x. 1 root root 27832 Jun 10 2014 /usr/bin/passwd[root@izuf6fmbh00axmyjllc0x0z ~]# ll /usr/bin/less-rwxr-xr-x. 1 root root 158240 Jul 31 2015 /usr/bin/less[root@izuf6fmbh00axmyjllc0x0z ~]# chmod u+s /usr/bin/less[root@izuf6fmbh00axmyjllc0x0z ~]# ll /usr/bin/less-rwsr-xr-x. 1 root root 158240 Jul 31 2015 /usr/bin/less SGID限定：既可以给二进制可执行程序设置，也可以给目录设置功能：在设置了SGID权限的目录下建立文件时，新创建的文件的所属组会继承上级目录权限 Stickybit限定：只作用于目录功能：目录下创建的文件只有root、文件创建、目录所有者才能删除 chmod功能：用于改变文件或目录的访问权限。该命令有两种用法：一种是包含字母和操作符表达式的文字设定法，另一种是包含数字的数字设定法。 文字设定chmod [who] [+ | - | =] [mode] 文件名chmod [who] [数值] 文件名 命令中各选项的含义为：1. 操作对象who 可以是下述字母中的任一个或者它们的组合： u 表示用户(user) ，即文件或目录的所有者 g 表示同组(group)用户，即与文件属主有相同组ID 的所有用户 o 表示其他(others)用户 a 表示所有(all)用户，它是系统默认值。2. 操作符号可以是： + 添加某个权限 - 取消某个权限 = 赋予给定权限,并取消其他所有权限3. mode 表示权限常用的参数有 r 可读 w 可写 x 可执行 例如：1 、将文件 script 的权限设为可执行。命令如下： chmod =rx text 执行成功后 ，用ls -l script 命令查看文件属性的结果如下： -r-xr-xr-x 1 user group 0 Feb 10 09:42 script2 、将文件 text 的权限设为：文件属主可读、可写、可执行，与文件属主同组的用户可读，其他用户不可读。命令如下： chmod u=rwx,g=r,o= text （注意,后无空格o=后有空格） 执行成功后 ，用ls –l text 命令查看文件属性的结果如下： -rwxr—– 1 user group 0 Feb 10 09:42 text 数字设定每种身份(owner/group/others)各自的三个权限(r/w/x)分数是需要累加的。例如当权限为： [-rwxrwx—] 分数则是： owner = rwx = 4+2+1 = 7 group = rwx = 4+2+1 = 7 others= — = 0+0+0 = 0 chmod 777 text chown功能：用于更改某个文件或目录的属主和属组。例如root 用户把自己的一个文件拷贝给用户oracle ，为了让用户oracle 能够存取这个文件，root 用户应该把这个文件的属主设为oracle ，否则用户oracle无法存取这个文件。语法：chown [用户:组] 文件 umaskumask可用来设定[权限掩码]。[权限掩码]是由3个八进制的数字所组成。 [root@localhost ~]# umask0022 权限计算将现有的存取权限减掉权限掩码后，即可产生建立文件时预设的权限。（有些时候会报错）文件默认权限=666-umask目录默认权限=777-umask 正确的计算方式：6 6 6 umask 0 3 3 取反110 110 110 000 011 011 取反 111 100 100110 110 110 与 111 100 100 异或110 100 100 getfacl功能：取得某个文件/目录的ACL设置项目。[root@localhost ~]# getfacl test# file: test# owner: root# group: rootuser::rwxgroup::r-xother::r-x setfacl功能：设置某个文件/目录的ACL设置项目。参数：-m：设置后续acl参数 -x：删除后续acl参数 -b：删除全部的acl参数-k：删除默认的acl参数-R：递归设置acl，包括子目录-d：设置默认acl 具体实例：#创建一个文件[root@localhost ~]# touch test[root@localhost ~]# chmod 777 test[root@localhost ~]# getfacl test //获得文件的ACL权限# file: test //文件名# owner: root //文件所属者# group: root //文件所属组user::rwx //文件所属者权限group::rwx //同组用户权限other::rwx //其它者权限#修改其ACL策略，使用用户code只有读取的权限[root@localhost ~]# setfacl -m u:code:r test[root@localhost ~]# ll /test-rwxrwxrwx+ 1 root root 1 Apr 09 10:25 /test //可以看到权限的最后多了一个”+”号#再次查看一下此文件的ACL属性[root@Slocalhost ~]# getfacl test# file: test# owner: root# group: rootuser::rwxuser:code:r-- //可以看到code单独的权限为r--group::rwxmask::rwxother::rwx#设置有效权限为只写[root@localhost ~]# setfacl -m m:w test [root@localhost ~]# getfacl test# file: test# owner: root# group: rootuser::rwxuser:code:r-- group::rwx mask::-w- //可以看到有效权限已经修改成功other::rwx#测试权限[root@localhost ~]# echo "this is a test getfacl " &gt;/test[code@localhost ~]$ vim /test "/test" [Permission Denied] //设置权限后不能写入数据#取消之前加入的权限[root@localhost ~]# setfacl -x u:code test //取消/test对用户code的权限[root@localhost ~]# setfacl -x m test //恢复有效权限[root@localhost~]# getfacl test # file: test# owner: root# group: rootuser::rwxgroup::rwxother::rwx[root@localhost ~]# ll /test-rwxrwxrwx 1 root root 24 Apr 09 15:01 /test chattr功能：改变文件属性。8种文件属性a：让文件或目录仅供附加用途。b：不更新文件或目录的最后存取时间。c：将文件或目录压缩后存放。d：将文件或目录排除在倾倒操作之外。i：不得任意更动文件或目录。s：保密性删除文件或目录。S：即时更新文件或目录。u：预防意外删除。 语法：chattr [+|-|=&lt;属性&gt;][文件或目录…] chattr +a a.txt //只能追加chattr +i a.txt //不能编辑chattr -i a.txtchattr -a a.txt lsattr功能：显示文件特殊属性 [root@localhost ~]# lsattr a.txt-----a---------- a.txt]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>文件权限管理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux-查看文件]]></title>
    <url>%2F2018%2F04%2F02%2FLinux%2F2018-04-02-Linux%E6%9F%A5%E7%9C%8B%E6%96%87%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[Linux 查看文件 cat 由第一行开始显示文件内容 tac 从最后一行开始显示 nl 显示的时候输出行号 more 一页一页的显示文件内容 less 与 more 类似，但是比 more 更好的是，他可以往前翻页 head 只看头几行 tail 只看最后几行 cat作用：从第一行开始查看文件内容语法：cat 文件名cat /etc/passwd tac作用：从最后一行开始显示文件内容，与cat相反语法：tac 文件名cat /etc/passwd nl作用：显示行号语法：nl 文件名nl /etc/passed more作用：分页显示文件内容，不能向上翻页语法：more 文件名more /etc/passwd快捷键： 空白键 (space)：代表向下翻一页； Enter ：代表向下翻『一行』； /字串 ：向下搜寻『字串』这个关键字； :f ：立刻显示出档名以及目前显示的行数； q ：退出显示。 b 或 [ctrl]-b ：代表往回翻页，不过这动作只对文件有用。 less作用：分页显示文件内容，可以上下翻页语法：less 文件名less /etc/passwd快捷键： 空白键 ：向下翻动一页 [pagedown]：向下翻动一页 [pageup] ：向上翻动一页 /字串 ：向下搜寻『字串』 ?字串 ：向上搜寻『字串』 n ：重复前一个搜寻 N ：反向的重复前一个搜寻 q ：离开 less 这个程序 head作用：显示文件前几行语法：head -n 文件名head -5 /etc/passwd tail作用：显示文件最后几行语法：tail -n 文件名tail -5 /etc/passwd]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>查看文件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux-文件与目录管理]]></title>
    <url>%2F2018%2F03%2F30%2FLinux%2F2018-03-30-Linux%E7%9B%AE%E5%BD%95%E5%A4%84%E7%90%86%E6%8C%87%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[Linux文件与目录管理Linux目录为树状结构，最顶级目录为根目录/ 。 绝对路径：由根目录/开始，例如 /etc/bin 相对路径：不是由/开始，例如由 /usr/temp/doc 要到 /usr/temp/ppt 底下时，可以写成： cd ../ppt 处理目录的常用命令 ls: 列出目录 cd：切换目录 pwd：显示目前的目录 mkdir：创建一个新的目录 rmdir：删除一个空的目录 cp: 复制文件或目录 rm: 移除文件或目录 ls 列出目录语法： ls [参数] 选项与参数：-a ：全部的文件，连同隐藏档( 开头为 . 的文件) 一起列出来(常用)-d ：仅列出目录本身，而不是列出目录内的文件数据(常用)-l ：长数据串列出，包含文件的属性与权限等等数据；(常用)[root@zhangq ~]# lsanaconda-ks.cfg cd 切换目录cd是Change Directory的缩写，这是用来变换工作目录的命令。 语法： cd [相对路径或绝对路径] #使用 mkdir 命令创建 test 目录[root@zhangq ~]# mkdir test#使用绝对路径切换到 test 目录[root@zhangq ~]# cd /root/test/#使用相对路径切换到 test 目录[root@zhangq ~]# cd ./test/#表示回到自己的家目录，亦即是 /root 这个目录[root@zhangq test]# cd ~#表示去到目前的上一级目录，亦即是 /root 的上一级目录的意思；[root@zhangq ~]# cd .. pwd 显示目前所在的目录pwd 是 Print Working Directory 的缩写，也就是显示目前所在目录的命令。 选项与参数：-P：显示出真实的路径，而非使用链接（link）路径。实例：[root@cinder ~]# pwd /root[root@cinder ~]# pwd -P/root[root@zhangq ~]# cd /var/mail &lt;==注意，/var/mail是一个连结档[root@zhangq mail]# pwd/var/mail &lt;==列出目前的工作目录[root@zhangq mail]# pwd -P/var/spool/mail &lt;==怎么回事？有没有加 -P 差很多～[root@zhangq mail]# ls -ld /var/maillrwxrwxrwx 1 root root 10 Sep 4 17:54 /var/mail -&gt; spool/mail#看到这里应该知道为啥了吧？因为 /var/mail 是连结档，连结到 /var/spool/mail #所以，加上 pwd -P 的选项后，会不以连结档的数据显示，而是显示正确的完整路径啊！ mkdir 创建文件夹语法：mkdir [-mp] 目录名称 选项与参数：-m ：配置文件的权限！直接配置-p ：递归创建目录(包含上一级目录)实例：创建目录[root@zhangq ~]# cd /tmp[root@zhangq tmp]# mkdir test &lt;==创建一名为 test 的新目录[root@zhangq tmp]# mkdir test1/test2/mkdir: cannot create directory `test1/test2/&apos;: No such file or directory &lt;== 没办法直接创建此目录啊！[root@zhangq tmp]# mkdir -p test1/test2实例：创建权限为rwx--x--x 的目录。[root@zhangq tmp]# mkdir -m 711 test2[root@zhangq tmp]# ls -ldrwxr-xr-x 3 root root 4096 Jul 18 12:50 testdrwxr-xr-x 3 root root 4096 Jul 18 12:53 test1drwx--x--x 2 root root 4096 Jul 18 12:54 test2 rmdir 删除文件夹语法： rmdir 目录名称实例：[root@zhangq tmp]# rmdir test不常用，习惯使用rm替代rmdir cp 拷贝语法:cp [options] [原文件或目录][目标目录] 选项与参数：-a：相当于 -pdr 的意思， - pdr 请参考下列说明；(常用)-d：若来源档为连结档的属性(link file)，则复制连结档属性而非文件本身；-f：为强制(force)的意思，若目标文件已经存在且无法开启，则移除后再尝试一次；-i：若目标档(destination)已经存在时，在覆盖时会先询问动作的进行(常用)-l：进行硬式连结(hard link)的连结档创建，而非复制文件本身；-p：连同文件的属性一起复制过去，而非使用默认属性(备份常用)；-r：递归持续复制，用於目录的复制行为；(常用)-s：复制成为符号连结档 (symbolic link)，亦即『捷径』文件；-u：若 destination 比 source 旧才升级 destination ！实例：#将目录/root/tmp1/test 复制到目录/root/work下[root@zhangq tmp]cp -r /root/tmp1/test /root/work#将/root/tmp1/test1目录下的test1和test2文件复制到root/work下，并保持目录属性 [root@zhangq tmp]cp -rp /root/tmp1/test1 /root/tmp1/test2 /root/work rm 删除文件或目录语法：rm [-fir][文件或目录] 选项与参数：-f：强制执行-i：互动模式-r：递归删除实例：[root@zhangq tmp]rm -rf /root/test mv 剪切或重命名语法：mv [-ifu][原文件或目录][目标目录] 选项与参数：-f ：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖；-i ：若目标文件 (destination) 已经存在时，就会询问是否覆盖！-u ：若目标文件已经存在，且 source 比较新，才会升级 (update)实例：#复制一文件，创建一目录，将文件移动到目录中[root@zhangq ~]# cd /tmp[root@zhangq tmp]# cp ~/.bashrc bashrc#将某个文件移动到某个目录[root@zhangq tmp]# mkdir mvtest[root@zhangq tmp]# mv bashrc mvtest#重命名[root@zhangq tmp]# mv mvtest mvtest2]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>文件与目录管理</tag>
      </tags>
  </entry>
</search>
